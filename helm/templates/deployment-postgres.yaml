{{- if .Values.postgres.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rt-db
  labels:
    {{- include "request-tracker.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  {{- if not .Values.postgres.autoscaling.enabled }}
  replicas: {{ .Values.postgres.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "request-tracker.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "request-tracker.labels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.postgres.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: rt
      {{- with .Values.postgres.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.postgres.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: psql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U ${POSTGRES_USER}
                - -d ${POSTGRES_DB}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U ${POSTGRES_USER}
                - -d ${POSTGRES_DB}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          {{- with .Values.postgres.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: rt-postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
              readOnly: false
            - mountPath: /var/run/postgresql
              name: postgres-run
              readOnly: false
          {{- with .Values.postgres.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: rt-postgres-data
        - name: postgres-run
          emptyDir:
            sizeLimit: 100Mi
      {{- with .Values.postgres.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
